diff --git a/src/connection-editor/page-wifi.c b/src/connection-editor/page-wifi.c
index 8713904..a32f07a 100644
--- a/src/connection-editor/page-wifi.c
+++ b/src/connection-editor/page-wifi.c
@@ -51,6 +51,9 @@ typedef struct {
 	GtkSizeGroup *group;
 
 	int last_channel;
+
+	gdouble channel_min;
+	gdouble channel_max;
 } CEPageWifiPrivate;
 
 static void
@@ -111,6 +114,11 @@ wifi_private_init (CEPageWifi *self)
 	priv->mtu      = GTK_SPIN_BUTTON (gtk_builder_get_object (builder, "wifi_mtu"));
 	widget = GTK_WIDGET (gtk_builder_get_object (builder, "mtu_units"));
 	gtk_size_group_add_widget (priv->group, widget);
+
+	priv->channel_min = 0;
+	priv->channel_max = 196;
+
+	gtk_spin_button_get_range (priv->channel, &priv->channel_min, &priv->channel_max);
 }
 
 static gboolean
@@ -214,14 +222,18 @@ band_value_changed_cb (GtkComboBox *box, gpointer user_data)
 {
 	CEPageWifi *self = CE_PAGE_WIFI (user_data);
 	CEPageWifiPrivate *priv = CE_PAGE_WIFI_GET_PRIVATE (self);
-	gboolean sensitive;
+	gboolean sensitive, aband;
 
 	priv->last_channel = 0;
 	gtk_spin_button_set_value (priv->channel, 0);
 
 	switch (gtk_combo_box_get_active (GTK_COMBO_BOX (box))) {
 	case 1: /* A */
+		aband = TRUE;
+		sensitive = TRUE;
+		break;
 	case 2: /* B/G */
+		aband = FALSE;
 		sensitive = TRUE;
 		break;
 	default:
@@ -229,6 +241,18 @@ band_value_changed_cb (GtkComboBox *box, gpointer user_data)
 		break;
 	}
 
+	if (sensitive) {
+		int i = 0, last_channel = 0;
+		for (i = (int)priv->channel_min; i <= (int)priv->channel_max; i++) {
+			if (nm_utils_wifi_channel_to_freq (i, aband ? "a" : "bg") == -1)
+				continue;
+
+			last_channel = i;
+
+		}
+		gtk_spin_button_set_range (priv->channel, priv->channel_min, (double)last_channel);
+	}
+
 	gtk_widget_set_sensitive (GTK_WIDGET (priv->channel), sensitive);
 
 	ce_page_changed (CE_PAGE (self));
