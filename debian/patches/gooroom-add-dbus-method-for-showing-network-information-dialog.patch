diff --git a/src/applet.c b/src/applet.c
index bfcfa8f..f325d4c 100644
--- a/src/applet.c
+++ b/src/applet.c
@@ -3535,6 +3535,85 @@ applet_gsettings_show_changed (GSettings *settings,
 		gtk_status_icon_set_visible (applet->status_icon, applet->visible);
 }
 
+static const gchar introspection_xml[] =
+	"<node>"
+	"  <interface name='org.freedesktop.NMApplet.Manager'>"
+	"    <method name='ShowNetworkInfo'/>"
+	"  </interface>"
+	"</node>";
+
+
+static void
+handle_method_call (GDBusConnection *conn,
+                    const gchar *sender,
+                    const gchar *object_path,
+                    const gchar *interface_name,
+                    const gchar *method_name,
+                    GVariant *parameters,
+                    GDBusMethodInvocation *invocation,
+                    gpointer user_data)
+{
+	if (g_str_equal (method_name, "ShowNetworkInfo")) {
+		g_dbus_method_invocation_return_value (invocation, g_variant_new ("()"));
+		applet_info_dialog_show (NM_APPLET (user_data));
+	} else {
+		g_dbus_method_invocation_return_error (invocation,
+                                               G_DBUS_ERROR,
+                                               G_DBUS_ERROR_FAILED,
+                                               "No such method: %s", method_name);
+	}
+}
+
+static const GDBusInterfaceVTable interface_vtable = {
+	handle_method_call,
+	NULL,
+	NULL
+};
+
+static void
+on_bus_name_lost (GDBusConnection *connection,
+                  const gchar     *name,
+                  gpointer        *user_data)
+{
+}
+
+static void
+on_bus_acquired (GDBusConnection *connection,
+                 const gchar     *name,
+                 gpointer        *user_data)
+{
+	GDBusNodeInfo *introspection_data;
+	NMApplet *applet = NM_APPLET (user_data);
+
+	// register object 
+	introspection_data = g_dbus_node_info_new_for_xml (introspection_xml, NULL);
+
+	applet->dbus_connection = connection;
+
+	applet->reg_id = g_dbus_connection_register_object (connection,
+                                                        "/org/freedesktop/NMApplet/Manager",
+                                                        introspection_data->interfaces[0],
+                                                        &interface_vtable,
+                                                        applet, NULL, NULL);
+
+	if (introspection_data)
+		g_dbus_node_info_unref (introspection_data);
+}
+
+static void
+applet_dbus_init (NMApplet *applet)
+{
+	if (applet->owner_id == 0) {
+		applet->owner_id = g_bus_own_name (G_BUS_TYPE_SESSION,
+                                           "org.freedesktop.NMApplet.Manager",
+                                           G_BUS_NAME_OWNER_FLAGS_NONE,
+                                           (GBusAcquiredCallback) on_bus_acquired,
+                                           NULL,
+                                           (GBusNameLostCallback) on_bus_name_lost,
+                                           applet, NULL);
+	}
+}
+
 /****************************************************************/
 
 static void
@@ -3662,11 +3741,23 @@ static void finalize (GObject *object)
 
 	g_clear_object (&applet->agent);
 
+	if (applet->owner_id) {
+		g_bus_unown_name (applet->owner_id);
+		applet->owner_id = 0;
+	}
+
+	if (applet->reg_id && applet->dbus_connection) {
+		g_dbus_connection_unregister_object (applet->dbus_connection, applet->reg_id);
+		applet->reg_id = 0;
+	}
+
 	G_OBJECT_CLASS (nma_parent_class)->finalize (object);
 }
 
 static void nma_init (NMApplet *applet)
 {
+	applet->reg_id = 0;
+	applet->owner_id = 0;
 	applet->icon_size = 16;
 
 	g_signal_connect (applet, "startup", G_CALLBACK (applet_startup), NULL);
@@ -3675,6 +3766,8 @@ static void nma_init (NMApplet *applet)
     applet->hide_policy_items = FALSE;
     if (getenv ("NM_APPLET_HIDE_POLICY_ITEMS"))
         applet->hide_policy_items = TRUE;
+
+	applet_dbus_init (applet);
 }
 
 static void nma_class_init (NMAppletClass *klass)
diff --git a/src/applet.h b/src/applet.h
index 9e83c94..33a6ff8 100644
--- a/src/applet.h
+++ b/src/applet.h
@@ -150,6 +150,11 @@ typedef struct {
     gpointer    notification_queue_data;
     guint       deferred_id;
 
+    guint reg_id;
+    guint owner_id;
+
+    GDBusConnection *dbus_connection;
+
 } NMApplet;
 
 typedef void (*AppletNewAutoConnectionCallback) (NMConnection *connection,
